/* ShibuTaskAgent Custom Styles */

:root {
    --primary-color: #4f46e5;
    --secondary-color: #6366f1;
    --success-color: #10b981;
    --warning-color: #f59e0b;
    --danger-color: #ef4444;
    --light-bg: #f8fafc;
    --border-color: #e2e8f0;

    /* Dark Mode Colors */
    --dark-bg: #1a1a1a;
    --dark-text: #f0f0f0;
    --dark-border-color: #333333;
    --dark-card-bg: #2a2a2a;
    --dark-primary-color: #5a52e0; /* Slightly adjusted for dark bg */
    --dark-secondary-color: #7073f8; /* Slightly adjusted for dark bg */
}

body {
    background-color: var(--light-bg);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.bg-gradient-primary {
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
}

.card {
    border: none;
    border-radius: 12px;
    transition: all 0.3s ease;
}

.card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.1);
}

.card-header {
    border-radius: 12px 12px 0 0 !important;
    border-bottom: 1px solid var(--border-color);
}

.btn {
    border-radius: 8px;
    font-weight: 500;
    transition: all 0.3s ease;
}

.btn:hover {
    transform: translateY(-1px);
}

.form-control {
    border-radius: 8px;
    border: 1px solid var(--border-color);
    transition: all 0.3s ease;
}

.form-control:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 0.2rem rgba(79, 70, 229, 0.25);
}

/* Task Cards */
.task-card {
    margin-bottom: 15px;
    padding: 15px;
    border-radius: 10px;
    border-left: 4px solid var(--primary-color);
    transition: all 0.3s ease;
}

.task-card:hover {
    transform: translateX(5px);
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.task-card.completed {
    border-left-color: var(--success-color);
    background-color: #f0fdf4;
}

.task-card.pending {
    border-left-color: var(--warning-color);
    background-color: #fffbeb;
}

.task-title {
    font-weight: 600;
    color: #1f2937;
    margin-bottom: 8px;
}

.task-meta {
    font-size: 0.875rem;
    color: #6b7280;
}

.task-link {
    display: inline-block;
    padding: 2px 8px;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 500;
}

.link-powerpoint { background-color: #d97706; color: white; }
.link-word { background-color: #2563eb; color: white; }
.link-excel { background-color: #059669; color: white; }
.link-outlook { background-color: #dc2626; color: white; }

.status-badge {
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 500;
}

.status-pending {
    background-color: #fef3c7;
    color: #92400e;
}

.status-completed {
    background-color: #d1fae5;
    color: #065f46;
}

/* Voice Input Animation */
.voice-recording {
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

/* Loading Animation */
.loading {
    opacity: 0.6;
    pointer-events: none;
}

.spinner-border-sm {
    width: 1rem;
    height: 1rem;
}

/* Responsive Design */
@media (max-width: 768px) {
    .container-fluid {
        padding: 15px;
    }
    
    header {
        padding: 20px !important;
    }
    
    .card-body {
        padding: 15px;
    }
    
    .task-card {
        padding: 12px;
    }
}

/* Custom Animations */
.fade-in {
    animation: fadeIn 0.5s ease-in;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

.slide-in {
    animation: slideIn 0.3s ease-out;
}

@keyframes slideIn {
    from { transform: translateX(-20px); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
}

/* Login Screen Styles */
#loginScreen {
    background: linear-gradient(135deg, var(--light-bg), #e0e7ff);
    min-height: 100vh;
}

#loginScreen .card {
    border: none;
    border-radius: 16px;
    backdrop-filter: blur(10px);
    background: rgba(255, 255, 255, 0.95);
}

#loginScreen .form-control {
    border-radius: 10px;
    border: 2px solid var(--border-color);
    padding: 12px 16px;
    font-size: 1rem;
}

#loginScreen .form-control:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 0.2rem rgba(79, 70, 229, 0.25);
}

#loginScreen .btn-primary {
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    border: none;
    border-radius: 10px;
    padding: 12px;
    font-weight: 600;
    transition: all 0.3s ease;
}

#loginScreen .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(79, 70, 229, 0.3);
}

.d-none {
    display: none !important;
}

.min-vh-100 {
    min-height: 100vh;
}

/* User Info Badge */
#userInfo {
    animation: fadeIn 0.5s ease-in;
    font-size: 0.8rem;
}

/* Task Checkbox Styles */
.task-checkbox-container {
    position: relative;
    margin-top: 4px;
}

.task-checkbox {
    opacity: 0;
    position: absolute;
    width: 20px;
    height: 20px;
    cursor: pointer;
}

.task-checkbox-label {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 2px solid var(--border-color);
    border-radius: 6px;
    background: white;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
}

.task-checkbox-label i {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    color: white;
    font-size: 10px;
    transition: transform 0.2s ease;
}

.task-checkbox:checked + .task-checkbox-label {
    background: linear-gradient(135deg, var(--success-color), #22c55e);
    border-color: var(--success-color);
    transform: scale(1.1);
}

.task-checkbox:checked + .task-checkbox-label i {
    transform: translate(-50%, -50%) scale(1);
}

.task-checkbox-label:hover {
    border-color: var(--primary-color);
    transform: scale(1.05);
}

/* Completed Task Styles */
.task-card.completed {
    opacity: 0.7;
    background: linear-gradient(135deg, #f8f9ff, #f0f4f8);
}

.completed-text {
    text-decoration: line-through;
    color: var(--text-muted);
    transition: all 0.3s ease;
}

.task-card.completed .task-meta {
    opacity: 0.8;
}

/* Task Card Animation */
.task-card {
    transition: all 0.3s ease;
    cursor: pointer;
}

.task-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

.task-card.completed:hover {
    transform: translateY(-1px);
}

.task-card:active {
    transform: scale(0.98);
}

/* Status Change Animation */
.task-status-changing {
    transform: scale(0.98);
    transition: transform 0.2s ease;
}

.task-header {
    align-items: flex-start;
}

.task-content {
    min-height: 24px;
}

/* Success Animation */
@keyframes checkmarkPop {
    0% { transform: translate(-50%, -50%) scale(0); }
    50% { transform: translate(-50%, -50%) scale(1.2); }
    100% { transform: translate(-50%, -50%) scale(1); }
}

.task-checkbox:checked + .task-checkbox-label i {
    animation: checkmarkPop 0.3s ease;
}

/* Task Completion Celebration */
@keyframes completionPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.02); }
    100% { transform: scale(1); }
}

.task-completed-animation {
    animation: completionPulse 0.5s ease;
}

/* Dark Mode Styles */
.dark-mode body {
    background-color: var(--dark-bg) !important;
    color: var(--dark-text);
}

/* ダークモード時の全体コンテナ */
.dark-mode .container-fluid {
    background-color: var(--dark-bg);
}

/* ダークモード時のメインアプリケーション領域 */
.dark-mode #mainApp {
    background-color: var(--dark-bg);
}

/* ダークモード時の行とページ全体 */
.dark-mode .row {
    background-color: transparent;
}

.dark-mode html {
    background-color: var(--dark-bg) !important;
}

.dark-mode .card {
    background-color: var(--dark-card-bg) !important;
    border-color: var(--dark-border-color);
    box-shadow: 0 8px 25px rgba(0,0,0,0.2); /* Adjusted shadow for dark mode */
}

.dark-mode .card-header {
    background-color: var(--dark-card-bg) !important;
    color: var(--dark-text);
    border-bottom: 1px solid var(--dark-border-color); /* Ensure border color is also consistent */
}

.dark-mode .card-body {
    background-color: var(--dark-card-bg) !important;
    color: var(--dark-text);
}

.dark-mode .form-control {
    background-color: var(--dark-card-bg); /* Using card bg for inputs */
    color: var(--dark-text);
    border-color: var(--dark-border-color);
}

.dark-mode .form-control:focus {
    border-color: var(--dark-primary-color);
    box-shadow: 0 0 0 0.2rem rgba(90, 82, 224, 0.3);
}

.dark-mode .task-card {
    background-color: var(--dark-card-bg);
    border-left-color: var(--dark-primary-color);
    box-shadow: 0 4px 15px rgba(0,0,0,0.2); /* Adjusted shadow */
}

.dark-mode .task-card.completed {
    background-color: #2c3e50; /* Darker completed background */
    border-left-color: var(--success-color); /* Keep success color for completed tasks */
    opacity: 0.8;
}

.dark-mode .task-card.pending {
    background-color: #3a3a3a; /* Slightly different bg for pending */
    border-left-color: var(--warning-color); /* Keep warning color */
}

.dark-mode .task-title {
    color: var(--dark-text);
}

.dark-mode .task-meta {
    color: #a0a0a0; /* Lighter gray for meta text */
}

.dark-mode .completed-text {
    color: #a0a0a0; /* Lighter gray for completed text */
}


/* Login Screen Dark Mode */
.dark-mode #loginScreen {
    background: linear-gradient(135deg, var(--dark-bg), #2c3e50); /* Dark gradient */
}

.dark-mode #loginScreen .card {
    background: rgba(42, 42, 42, 0.9); /* Darker, semi-transparent card */
    backdrop-filter: blur(10px);
    border: 1px solid var(--dark-border-color);
}

.dark-mode #loginScreen .form-control {
    background-color: #3a3a3a; /* Specific input background for login */
    color: var(--dark-text);
    border-color: var(--dark-border-color);
}

.dark-mode #loginScreen .form-control:focus {
    border-color: var(--dark-primary-color);
    box-shadow: 0 0 0 0.2rem rgba(90, 82, 224, 0.3);
}

.dark-mode #loginScreen .btn-primary {
    background: linear-gradient(135deg, var(--dark-primary-color), var(--dark-secondary-color));
    box-shadow: 0 8px 25px rgba(90, 82, 224, 0.4);
}

/* Task Checkbox Dark Mode */
.dark-mode .task-checkbox-label {
    background: var(--dark-card-bg);
    border-color: var(--dark-border-color);
}

.dark-mode .task-checkbox:checked + .task-checkbox-label {
    background: linear-gradient(135deg, var(--success-color), #22c55e); /* Keep success gradient */
    border-color: var(--success-color);
}

.dark-mode .task-checkbox-label:hover {
    border-color: var(--dark-primary-color);
}

.dark-mode .status-pending {
    background-color: #4a4a4a;
    color: #f59e0b; /* Keep warning text color for visibility */
}

.dark-mode .status-completed {
    background-color: #2c3e50;
    color: #10b981; /* Keep success text color for visibility */
}

.dark-mode .btn-primary {
    background-color: var(--dark-primary-color);
    border-color: var(--dark-primary-color);
    color: var(--dark-text);
}

.dark-mode .btn-primary:hover {
    background-color: var(--dark-secondary-color); /* Using secondary for hover, or a lightened/darkened primary */
    border-color: var(--dark-secondary-color);
    color: var(--dark-text);
}

/* For the default state of the voice input button */
.dark-mode .btn-outline-secondary {
    color: var(--dark-text); /* Text color */
    border-color: var(--dark-secondary-color); /* Border color */
}

.dark-mode .btn-outline-secondary:hover {
    background-color: var(--dark-secondary-color); /* Background on hover */
    color: var(--dark-text); /* Text color on hover - could also be a lighter variant of --dark-text if needed */
}

/* For the recording state of the voice input button */
.dark-mode .btn-danger {
    background-color: var(--danger-color); /* Keep existing danger color */
    border-color: var(--danger-color);
    color: var(--dark-text); /* Ensure text is light on dark red background */
}

.dark-mode .btn-danger:hover {
    background-color: #dc3545; /* A common darker shade for Bootstrap's btn-danger hover */
    border-color: #dc3545;
    color: var(--dark-text);
}

/* Dark Mode Header */
.dark-mode .bg-gradient-primary {
    background: linear-gradient(135deg, var(--dark-primary-color), var(--dark-secondary-color));
}

/* Dark Mode Text Improvements - moved to consolidated section above */

.dark-mode .badge.bg-light {
    background-color: #4a4a4a !important;
    color: var(--dark-text) !important;
}

/* Dark Mode Additional Improvements */
.dark-mode .card:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 35px rgba(0,0,0,0.3);
}

.dark-mode .task-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 30px rgba(0,0,0,0.3);
}

.dark-mode .alert-info {
    background-color: rgba(90, 82, 224, 0.1);
    border-color: var(--dark-primary-color);
    color: var(--dark-text);
}

.dark-mode .opacity-75 {
    opacity: 0.8 !important;
}

/* ダークモード時のカード外側余白 */
.dark-mode .col-md-6 {
    background-color: transparent;
}

.dark-mode .mb-4 {
    background-color: transparent;
}

/* ダークモード時のBootstrapのコンテナクラス */
.dark-mode .container,
.dark-mode .container-fluid,
.dark-mode .container-sm,
.dark-mode .container-md,
.dark-mode .container-lg,
.dark-mode .container-xl {
    background-color: var(--dark-bg);
}

/* ダークモード時のBootstrapグリッドシステム */
.dark-mode [class*="col-"] {
    background-color: transparent;
}

/* ダークモード時のアウトラインボタン */
.dark-mode .btn-outline-light {
    color: var(--dark-text);
    border-color: rgba(255, 255, 255, 0.3);
    background-color: transparent;
}

.dark-mode .btn-outline-light:hover {
    background-color: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.5);
    color: var(--dark-text);
}

.dark-mode .btn-outline-primary {
    color: var(--dark-primary-color);
    border-color: var(--dark-primary-color);
}

.dark-mode .btn-outline-primary:hover {
    background-color: var(--dark-primary-color);
    border-color: var(--dark-primary-color);
    color: var(--dark-text);
}

/* ダークモード時のスクロール全体 */
.dark-mode ::-webkit-scrollbar {
    width: 8px;
}

.dark-mode ::-webkit-scrollbar-track {
    background: var(--dark-card-bg);
}

.dark-mode ::-webkit-scrollbar-thumb {
    background: #555;
    border-radius: 4px;
}

.dark-mode ::-webkit-scrollbar-thumb:hover {
    background: #777;
}

/* ダークモード時のBootstrap bg-lightクラス上書き */
.dark-mode .bg-light {
    background-color: var(--dark-card-bg) !important;
    color: var(--dark-text) !important;
}

/* ダークモード時のBootstrap text-mutedクラス上書き */
.dark-mode .text-muted {
    color: #999 !important;
}

/* ダークモード時の全てのBootstrapカード関連クラス */
.dark-mode .card,
.dark-mode .card-header,
.dark-mode .card-body,
.dark-mode .card-footer {
    background-color: var(--dark-card-bg) !important;
    color: var(--dark-text) !important;
    border-color: var(--dark-border-color) !important;
}